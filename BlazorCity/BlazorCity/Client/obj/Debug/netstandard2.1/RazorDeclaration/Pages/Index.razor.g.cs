// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorCity.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Work\Новая папка (4)\BlazorCity\BlazorCity\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Work\Новая папка (4)\BlazorCity\BlazorCity\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Work\Новая папка (4)\BlazorCity\BlazorCity\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Work\Новая папка (4)\BlazorCity\BlazorCity\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Work\Новая папка (4)\BlazorCity\BlazorCity\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Work\Новая папка (4)\BlazorCity\BlazorCity\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Work\Новая папка (4)\BlazorCity\BlazorCity\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Work\Новая папка (4)\BlazorCity\BlazorCity\Client\_Imports.razor"
using BlazorCity.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Work\Новая папка (4)\BlazorCity\BlazorCity\Client\_Imports.razor"
using BlazorCity.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Work\Новая папка (4)\BlazorCity\BlazorCity\Client\_Imports.razor"
using BlazorCity.Shared.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Work\Новая папка (4)\BlazorCity\BlazorCity\Client\_Imports.razor"
using Microsoft.AspNetCore.SignalR.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Work\Новая папка (4)\BlazorCity\BlazorCity\Client\_Imports.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Work\Новая папка (4)\BlazorCity\BlazorCity\Client\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 46 "C:\Work\Новая папка (4)\BlazorCity\BlazorCity\Client\Pages\Index.razor"
       
    private List<City> cities = new List<City>();
    private HubConnection hubConnection;
    private string FoundationDay;
    protected override async Task OnInitializedAsync()
    {
        HubConnection();

        GetAllCitiesListener();
        DeleteCityListener();
        EditCityListener();
        AddCityListener();

        await hubConnection.StartAsync();

        await GetAllCitites();
    }

    private void HubConnection()
    {
        hubConnection = new HubConnectionBuilder()
        .WithUrl(NavigationManager.ToAbsoluteUri("/CityHub"))
        .Build();
    }

    private void GetAllCitiesListener()
    {
        hubConnection.On<IEnumerable<City>>("ReceiveAllCities", (citiesData) =>
        {
            foreach (var city in citiesData)
            {
                cities.Add(city);
            }

            StateHasChanged();
        });
    }

    private void DeleteCityListener()
    {
        hubConnection.On<int>("ReceiveDeleteCity", (cityId) =>
        {
            var city = cities.FirstOrDefault(c => c.CityId == cityId);
            cities.Remove(city);

            StateHasChanged();
        });
    }

    private void EditCityListener()
    {
        hubConnection.On<City>("ReceiveEditCity", (cityData) =>
        {
            var city = cities.FirstOrDefault(c => c.CityId == cityData.CityId);
            var index = cities.IndexOf(city);
            cities[index] = cityData;

            StateHasChanged();
        });
    }

    private void AddCityListener()
    {
        hubConnection.On<City>("ReceiveAddCity", (city) =>
        {
            cities.Add(city);
            StateHasChanged();
        });
    }

    Task GetAllCitites()
    {
        return hubConnection.SendAsync("SendAllCities");
    }

    Task DeleteCity(int id)
    {
        return hubConnection.SendAsync("SendDeleteCity", id);
    }

    public bool IsConnected =>
    hubConnection.State == HubConnectionState.Connected;

    private void EditCity(int id)
    {
        NavigationManager.NavigateTo("/editcity/" + id);
    }

    public async ValueTask DisposeAsync()
    {
        await hubConnection.DisposeAsync();
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
